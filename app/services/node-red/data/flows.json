[
    {
        "id": "33fb17bbf994d881",
        "type": "tab",
        "label": "Monitoring",
        "disabled": false,
        "info": "# \"Hype\" is all you need\n\nThe main flow of operations and control",
        "env": []
    },
    {
        "id": "58d31a6645cf0990",
        "type": "tab",
        "label": "Twitter",
        "disabled": false,
        "info": "# Twitter\n\nThe data extraction from the Twitter Developer API\n\n## Reference\n\n[https://developer.twitter.com/en/docs](https://developer.twitter.com/en/docs)\n\n## Data to extract\n\n- Tweets",
        "env": []
    },
    {
        "id": "96dea6cd75e87f04",
        "type": "tab",
        "label": "YouTube",
        "disabled": false,
        "info": "# YouTube\n\nThe data extraction from the YouTube API\n\n## Reference\n\n[https://developers.google.com/youtube/v3](https://developers.google.com/youtube/v3)\n\n## Data to extract\n\n- Trailers\n- Comments\n- Reactions\n- Statistics",
        "env": []
    },
    {
        "id": "ea2cb14739a34ceb",
        "type": "tab",
        "label": "Reddit",
        "disabled": false,
        "info": "# Reddit\n\nThe data extraction from the Reddit API\n\n## Reference\n\n[https://www.reddit.com/dev/api/](https://www.reddit.com/dev/api/)\n\n## Data to extract\n\n- Possible subreddits\n- Opinions",
        "env": []
    },
    {
        "id": "4bbfa8c0eabd9b15",
        "type": "tab",
        "label": "IMDB",
        "disabled": false,
        "info": "# IMDB\n\nThe data extraction from the IMDB API\n\n## Reference\n\n[https://developer.imdb.com/](https://developer.imdb.com/)\n\n## Data to extract\n\n- As much information as possible about the movie",
        "env": []
    },
    {
        "id": "b91c4e80c1c500c6",
        "type": "tab",
        "label": "Google Trends",
        "disabled": false,
        "info": "# Google Trends\n\nThe data straction from the Google Trends unofficial API\n\n## Reference\n\n[https://www.npmjs.com/package/google-trends-api](https://www.npmjs.com/package/google-trends-api)\n\n## Data to extract\n\n- As much information as possible about the movie after the trailer release",
        "env": []
    },
    {
        "id": "25be1398db68e983",
        "type": "group",
        "z": "33fb17bbf994d881",
        "name": "Variables Control",
        "style": {
            "label": true,
            "fill": "#6f2fa0",
            "fill-opacity": "0.56",
            "color": "#ffffff"
        },
        "nodes": [
            "cfacdbbfb76c72cb",
            "fbb04e1d387b251d",
            "b74c167dd34d1f38",
            "210bc54476210420"
        ],
        "env": [],
        "x": 946,
        "y": 46,
        "w": 677,
        "h": 434
    },
    {
        "id": "90b78e985a191901",
        "type": "group",
        "z": "33fb17bbf994d881",
        "name": "Main flow control",
        "style": {
            "label": true,
            "color": "#3f3f3f",
            "fill-opacity": "0.31",
            "fill": "#ffdf7f"
        },
        "nodes": [
            "82b7e2114da2c90c",
            "68c62bfd43270c82",
            "22b0d3f6903e2ae1",
            "3a1f342f5d9a2363"
        ],
        "env": [],
        "x": 58,
        "y": 45,
        "w": 868,
        "h": 442
    },
    {
        "id": "36b90f13e99c7368",
        "type": "group",
        "z": "33fb17bbf994d881",
        "name": "Extraction control",
        "style": {
            "label": true,
            "fill": "#bfdbef",
            "fill-opacity": "0.32",
            "color": "#3f3f3f"
        },
        "nodes": [
            "fae6370bc24314e3",
            "cd55537075b2f83f",
            "146013432e626e82",
            "791ed0bdc6f7a0f1",
            "d93fafc929717349"
        ],
        "env": [],
        "x": 60,
        "y": 513,
        "w": 914,
        "h": 534
    },
    {
        "id": "bbe7bfd43c865176",
        "type": "group",
        "z": "33fb17bbf994d881",
        "name": "Get current state",
        "style": {
            "fill": "#b797cf",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "e53a26d4fc3d0b52",
            "51f34a833b432447",
            "8037c7ec10581a26"
        ],
        "env": [],
        "x": 994,
        "y": 499,
        "w": 582,
        "h": 82
    },
    {
        "id": "e6da8ff70a6f5f75",
        "type": "group",
        "z": "33fb17bbf994d881",
        "name": "Create utils",
        "style": {
            "fill": "#b797cf",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "6a421fa71f1bb9a5",
            "dc1335795136f1fa",
            "ada12486597f99e3"
        ],
        "env": [],
        "x": 994,
        "y": 599,
        "w": 532,
        "h": 82
    },
    {
        "id": "8cb3048a690aefc7",
        "type": "group",
        "z": "33fb17bbf994d881",
        "name": "Movies management",
        "style": {
            "label": true,
            "fill": "#7f8faf",
            "fill-opacity": "0.3",
            "color": "#3f3f3f"
        },
        "nodes": [
            "3784ea386c52ddbc",
            "b6fe3eac17025871",
            "afc7153e8e396ddf",
            "f2b30cad92cf9df0",
            "4031fb8954fe4e03"
        ],
        "env": [],
        "x": 998,
        "y": 713,
        "w": 868,
        "h": 594
    },
    {
        "id": "a11aaf49ce84b49b",
        "type": "group",
        "z": "96dea6cd75e87f04",
        "name": "Show the flow's status",
        "style": {
            "label": true,
            "fill": "#7fb7df",
            "color": "#3f3f3f"
        },
        "nodes": [
            "272baba813a69f54",
            "df4b66d57393f062",
            "7f8de2ca53d2b668"
        ],
        "env": [],
        "x": 434,
        "y": 139,
        "w": 572,
        "h": 82
    },
    {
        "id": "09d0a1f7b908fa55",
        "type": "group",
        "z": "96dea6cd75e87f04",
        "name": "Stop/Pause the flow",
        "style": {
            "fill": "#ff7f7f",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "8c21f56ec687f85d",
            "506b0491269255a0",
            "551b75efa3ebd3b3",
            "99b6a8b9b68b9940"
        ],
        "env": [],
        "x": 764,
        "y": 39,
        "w": 632,
        "h": 82
    },
    {
        "id": "3decdc76360abade",
        "type": "group",
        "z": "96dea6cd75e87f04",
        "name": "Start/Resume the flow",
        "style": {
            "fill": "#c8e7a7",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "4713841ca8d64fbf",
            "674add1142f7351e",
            "a505d1593c9d0984",
            "92293ec45dd48ed1"
        ],
        "env": [],
        "x": 54,
        "y": 39,
        "w": 682,
        "h": 82
    },
    {
        "id": "0a210a01c848dcac",
        "type": "group",
        "z": "4bbfa8c0eabd9b15",
        "name": "Start/Resume the flow",
        "style": {
            "fill": "#c8e7a7",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "f8049b37419f5c46",
            "54f068c0b5a8a931",
            "cb6121e9591fd6d3",
            "08b666656aa58ae9"
        ],
        "env": [],
        "x": 54,
        "y": 39,
        "w": 682,
        "h": 82
    },
    {
        "id": "e16765be6b5f25ee",
        "type": "group",
        "z": "4bbfa8c0eabd9b15",
        "name": "Stop/Pause the flow",
        "style": {
            "fill": "#ff7f7f",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "86a5a4925d7e7bba",
            "dcde1d055b2603d0",
            "f020a7cc3fbf7791",
            "1794f5c5a3de3e9b"
        ],
        "env": [],
        "x": 764,
        "y": 39,
        "w": 632,
        "h": 82
    },
    {
        "id": "a283e2958852e8dc",
        "type": "group",
        "z": "4bbfa8c0eabd9b15",
        "name": "Show the flow's status",
        "style": {
            "label": true,
            "fill": "#7fb7df",
            "color": "#3f3f3f"
        },
        "nodes": [
            "5363800c2bea0ce1",
            "eac6b8f5bf605af7",
            "8d93992f751f3cf8"
        ],
        "env": [],
        "x": 434,
        "y": 139,
        "w": 572,
        "h": 82
    },
    {
        "id": "7237a8c2747f7af5",
        "type": "group",
        "z": "b91c4e80c1c500c6",
        "name": "Start/Resume the flow",
        "style": {
            "fill": "#c8e7a7",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "81c1e82146f95dcc",
            "1efc6786a730f260",
            "6d7f483ed33fb9a5",
            "66a33a13a769188a"
        ],
        "env": [],
        "x": 54,
        "y": 39,
        "w": 682,
        "h": 82
    },
    {
        "id": "29b5bef846af963b",
        "type": "group",
        "z": "b91c4e80c1c500c6",
        "name": "Stop/Pause the flow",
        "style": {
            "fill": "#ff7f7f",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "06ee0c7463410ec8",
            "0bd4f4d81f29b7c6",
            "51e316551668b964",
            "9f7a5a766c56e746"
        ],
        "env": [],
        "x": 764,
        "y": 39,
        "w": 632,
        "h": 82
    },
    {
        "id": "46807eb49ce40c73",
        "type": "group",
        "z": "b91c4e80c1c500c6",
        "name": "Show the flow's status",
        "style": {
            "label": true,
            "fill": "#7fb7df",
            "color": "#3f3f3f"
        },
        "nodes": [
            "a92e94c5b5d027e9",
            "9c804ac7a2d38fd8",
            "e543abed3b8989cc"
        ],
        "env": [],
        "x": 434,
        "y": 139,
        "w": 572,
        "h": 82
    },
    {
        "id": "5c4cd79a01546caf",
        "type": "group",
        "z": "ea2cb14739a34ceb",
        "name": "Show the flow's status",
        "style": {
            "label": true,
            "fill": "#7fb7df",
            "color": "#3f3f3f"
        },
        "nodes": [
            "93b735641bed9b26",
            "66a2d85fba4c67f9",
            "ebb0b8b5bf5c2a05"
        ],
        "env": [],
        "x": 434,
        "y": 139,
        "w": 572,
        "h": 82
    },
    {
        "id": "55e4753d67b86fe2",
        "type": "group",
        "z": "ea2cb14739a34ceb",
        "name": "Stop/Pause the flow",
        "style": {
            "fill": "#ff7f7f",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "250a835ccacffc06",
            "7b8b0a0f1b638ba5",
            "aa8d5d8b5483903e",
            "bed9bcbc38ec89b1"
        ],
        "env": [],
        "x": 764,
        "y": 39,
        "w": 632,
        "h": 82
    },
    {
        "id": "3fd8946dee861a41",
        "type": "group",
        "z": "ea2cb14739a34ceb",
        "name": "Start/Resume the flow",
        "style": {
            "fill": "#c8e7a7",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "b51b62a7319e485e",
            "7f8e2533800156bb",
            "c7f1ad1ebdb19dac",
            "9f325b821c5e188a"
        ],
        "env": [],
        "x": 54,
        "y": 39,
        "w": 682,
        "h": 82
    },
    {
        "id": "ac2f4444927f5422",
        "type": "group",
        "z": "58d31a6645cf0990",
        "name": "Start/Resume the flow",
        "style": {
            "fill": "#c8e7a7",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "df88add75a402e30",
            "223e07e42ab4cc17",
            "817e71bb78abc26b",
            "ad226aa0c8785e01"
        ],
        "env": [],
        "x": 54,
        "y": 39,
        "w": 682,
        "h": 82
    },
    {
        "id": "fdaebe4c5381fa72",
        "type": "group",
        "z": "58d31a6645cf0990",
        "name": "Stop/Pause the flow",
        "style": {
            "fill": "#ff7f7f",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "72861dd35d802671",
            "ce19dc01f742a7ae",
            "6f1ccd9fbc553af2",
            "636843ece6839af9"
        ],
        "env": [],
        "x": 764,
        "y": 39,
        "w": 632,
        "h": 82
    },
    {
        "id": "cac3bb2d7a66d622",
        "type": "group",
        "z": "58d31a6645cf0990",
        "name": "Show the flow's status",
        "style": {
            "label": true,
            "fill": "#7fb7df",
            "color": "#3f3f3f"
        },
        "nodes": [
            "5df2a142fc5a534b",
            "7b6144d531c9c56a",
            "e10a963b5251853d"
        ],
        "env": [],
        "x": 434,
        "y": 139,
        "w": 572,
        "h": 82
    },
    {
        "id": "cfacdbbfb76c72cb",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "25be1398db68e983",
        "name": "Get all context variables",
        "style": {
            "fill": "#b797cf",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "a2543d2f6c181db1",
            "e8110d0479702d80",
            "94e297c4e636cc49"
        ],
        "env": [],
        "x": 974,
        "y": 72,
        "w": 622,
        "h": 82
    },
    {
        "id": "fbb04e1d387b251d",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "25be1398db68e983",
        "name": "Get all flow variables",
        "style": {
            "fill": "#b797cf",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "21ae0b9f09891106",
            "a120d22e21ce0c4b",
            "6fbf0edbf7cd1cb4"
        ],
        "env": [],
        "x": 972,
        "y": 172,
        "w": 582,
        "h": 82
    },
    {
        "id": "b74c167dd34d1f38",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "25be1398db68e983",
        "name": "Get all global variables",
        "style": {
            "fill": "#b797cf",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "afd564e59c73458f",
            "3c2503e4ed0a3a27",
            "11c3670eb88bf4c6"
        ],
        "env": [],
        "x": 975,
        "y": 272,
        "w": 622,
        "h": 82
    },
    {
        "id": "210bc54476210420",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "25be1398db68e983",
        "name": "Create dumpVariables",
        "style": {
            "fill": "#b797cf",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "4769a5da73ed07a4",
            "96ef737e0794df08",
            "42ca26c83a08406c"
        ],
        "env": [],
        "x": 982,
        "y": 372,
        "w": 602,
        "h": 82
    },
    {
        "id": "82b7e2114da2c90c",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "90b78e985a191901",
        "name": "Stop the activity",
        "style": {
            "label": true,
            "fill": "#ff7f7f",
            "color": "#ffffff"
        },
        "nodes": [
            "b46b2f7a9cacfb0d",
            "1ac4764c14d95d86",
            "fb0c21e7bca3fcd3",
            "af286c9fffab4d4a"
        ],
        "env": [],
        "x": 84,
        "y": 171,
        "w": 802,
        "h": 82
    },
    {
        "id": "68c62bfd43270c82",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "90b78e985a191901",
        "name": "Start the activty",
        "style": {
            "label": true,
            "fill": "#c8e7a7",
            "color": "#3f3f3f"
        },
        "nodes": [
            "177b3fd6e565fe4f",
            "fb234d64aab87818",
            "10543e828af4aaf8",
            "d20011e0d4ae6543"
        ],
        "env": [],
        "x": 84,
        "y": 71,
        "w": 802,
        "h": 82
    },
    {
        "id": "fae6370bc24314e3",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "36b90f13e99c7368",
        "name": "Control the Twitter flow",
        "style": {
            "label": true,
            "fill": "#1c9cea",
            "color": "#ffffff",
            "fill-opacity": "0.75"
        },
        "nodes": [
            "7b9d9f7778e7c5a2",
            "d4250208693a84f0",
            "ffd926bc90de0224",
            "e19ffe7bcbe6e56c"
        ],
        "env": [],
        "x": 86,
        "y": 539,
        "w": 802,
        "h": 82
    },
    {
        "id": "cd55537075b2f83f",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "36b90f13e99c7368",
        "name": "Control the YouTube flow",
        "style": {
            "label": true,
            "fill": "#f70000",
            "color": "#ffffff",
            "fill-opacity": "0.75"
        },
        "nodes": [
            "b812395ac4f4ce7d",
            "df8ff5651f86f89e",
            "51ae80d2f6ca8eb3",
            "f8afc3939b6bf481"
        ],
        "env": [],
        "x": 86,
        "y": 639,
        "w": 822,
        "h": 82
    },
    {
        "id": "146013432e626e82",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "36b90f13e99c7368",
        "name": "Control the Reddit flow",
        "style": {
            "label": true,
            "fill": "#ff5700",
            "color": "#ffffff",
            "fill-opacity": "0.75"
        },
        "nodes": [
            "4bb19129745148f2",
            "ec8565ebc928fcb9",
            "8848c62a563e38de",
            "0c21dd766dd3106b"
        ],
        "env": [],
        "x": 86,
        "y": 739,
        "w": 802,
        "h": 82
    },
    {
        "id": "791ed0bdc6f7a0f1",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "36b90f13e99c7368",
        "name": "Control the IMDB flow",
        "style": {
            "label": true,
            "fill": "#e6b91e",
            "color": "#3f3f3f",
            "fill-opacity": "0.75"
        },
        "nodes": [
            "fa83c1338bc90b39",
            "07dbd259743fbff4",
            "a785604e891efaca",
            "ce5c613b3b1c4bed"
        ],
        "env": [],
        "x": 86,
        "y": 839,
        "w": 802,
        "h": 82
    },
    {
        "id": "d93fafc929717349",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "36b90f13e99c7368",
        "name": "Control the Google Trends flow",
        "style": {
            "label": true,
            "fill": "#0086f9",
            "color": "#ffffff",
            "fill-opacity": "0.75"
        },
        "nodes": [
            "c7db1f296bab31b7",
            "14a494146e341edc",
            "a3e9ae0f793939f8",
            "8403735ec8044349"
        ],
        "env": [],
        "x": 86,
        "y": 939,
        "w": 862,
        "h": 82
    },
    {
        "id": "22b0d3f6903e2ae1",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "90b78e985a191901",
        "name": "Enable production mode",
        "style": {
            "fill": "#7fb7df",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "4433f2421809b0cf",
            "996cbd9c17a39cc2",
            "8f1b97b0ca3a415b",
            "a1015830ca1a8fc8"
        ],
        "env": [],
        "x": 87,
        "y": 274,
        "w": 812,
        "h": 82
    },
    {
        "id": "3a1f342f5d9a2363",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "90b78e985a191901",
        "name": "Enable development mode",
        "style": {
            "label": true,
            "fill": "#b797cf",
            "color": "#ffffff"
        },
        "nodes": [
            "a74864bfbd14be58",
            "127e0c5af75fab3c",
            "8ef49ea1db0e1671",
            "f830d5ec45f92c85"
        ],
        "env": [],
        "x": 88,
        "y": 379,
        "w": 812,
        "h": 82
    },
    {
        "id": "3784ea386c52ddbc",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "8cb3048a690aefc7",
        "name": "Load movies",
        "style": {
            "label": true,
            "fill": "#7f8faf",
            "color": "#ffffff",
            "stroke": "#7f7f7f"
        },
        "nodes": [
            "9e29b71bf0dd28b5",
            "63a61d6b0b52cbc9",
            "8179ccaf18dc182d",
            "97fe3683dfc76654",
            "201f2eec2d8a6d70",
            "cd8c9fdb30f6952a",
            "a792857bb3332a15"
        ],
        "env": [],
        "x": 1024,
        "y": 739,
        "w": 772,
        "h": 142
    },
    {
        "id": "b6fe3eac17025871",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "8cb3048a690aefc7",
        "name": "Save movies",
        "style": {
            "fill": "#7f8faf",
            "label": true,
            "color": "#ffffff",
            "stroke": "#7f7f7f"
        },
        "nodes": [
            "417b5678e5dd71c5",
            "21ae4c72edd75006",
            "e7ca973c2aefb6bd",
            "b838ce902af75d6e"
        ],
        "env": [],
        "x": 1028,
        "y": 899,
        "w": 812,
        "h": 82
    },
    {
        "id": "afc7153e8e396ddf",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "8cb3048a690aefc7",
        "name": "Create addMovie",
        "style": {
            "stroke": "#7f7f7f",
            "fill": "#7f8faf",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "322a05e3d72481a7",
            "dbf00bb6ef12cbbd",
            "9c87a3d5f2f7f29f"
        ],
        "env": [],
        "x": 1032,
        "y": 999,
        "w": 572,
        "h": 82
    },
    {
        "id": "f2b30cad92cf9df0",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "8cb3048a690aefc7",
        "name": "Create editMovie",
        "style": {
            "stroke": "#7f7f7f",
            "fill": "#7f8faf",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "c5b1479845858ffa",
            "5a0792746fbfc767",
            "f481525aa8bba3d5"
        ],
        "env": [],
        "x": 1032,
        "y": 1099,
        "w": 572,
        "h": 82
    },
    {
        "id": "4031fb8954fe4e03",
        "type": "group",
        "z": "33fb17bbf994d881",
        "g": "8cb3048a690aefc7",
        "name": "Create deleteMovie",
        "style": {
            "stroke": "#7f7f7f",
            "fill": "#7f8faf",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "e9ea3015eaf7d185",
            "bb3e9e9231b78183",
            "e547516ca02b712d"
        ],
        "env": [],
        "x": 1036,
        "y": 1199,
        "w": 572,
        "h": 82
    },
    {
        "id": "325fde2a5c8391ee",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "08e47a0b0721b8f3",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "62d4a8ab144e9636",
        "type": "ui_tab",
        "name": "Unlock Door",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dae44e60e785c691",
        "type": "ui_tab",
        "name": "LOAD / RECOVER DATA",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "803ea2f6.d503a",
        "type": "ui_tab",
        "name": "OpenWeather node",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2c06a09f.bcd4f",
        "type": "ui_tab",
        "name": "Forms controls node-RED",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "37891d11.65a522",
        "type": "ui_tab",
        "name": "Chart Examples",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "7386f74b93cf95c3",
        "type": "ui_tab",
        "name": "Charts",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f64eb6be.3adcd8",
        "type": "ui_tab",
        "name": "Table Example",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9de26461a1743207",
        "type": "ui_tab",
        "name": "PRUEBA MAPA",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "906d0cc219ea895f",
        "type": "ui_group",
        "name": "Secure",
        "tab": "62d4a8ab144e9636",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "110b88cfd3e072ee",
        "type": "ui_group",
        "name": "modal",
        "tab": "62d4a8ab144e9636",
        "order": 2,
        "disp": false,
        "width": "1",
        "collapse": false
    },
    {
        "id": "8a58a152bd68fa97",
        "type": "ui_group",
        "name": "Default",
        "tab": "dae44e60e785c691",
        "order": 1,
        "disp": true,
        "width": "14",
        "collapse": false
    },
    {
        "id": "c48c450b.176db8",
        "type": "ui_group",
        "name": "Weather",
        "tab": "803ea2f6.d503a",
        "order": 5,
        "disp": true,
        "width": "6"
    },
    {
        "id": "8dfd9bb4.22afa8",
        "type": "ui_group",
        "name": "Text Input control",
        "tab": "2c06a09f.bcd4f",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "b27137b7.4ce0f8",
        "type": "ui_group",
        "name": "Form Control",
        "tab": "2c06a09f.bcd4f",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "16c631bf.26f86e",
        "type": "ui_group",
        "name": "Email Address (text input control)",
        "tab": "2c06a09f.bcd4f",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "4745f170.2c12c",
        "type": "ui_group",
        "name": "Password (Text input control)",
        "tab": "2c06a09f.bcd4f",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "eebe534b.d558e",
        "type": "ui_group",
        "name": "Color picker (text input control)",
        "tab": "2c06a09f.bcd4f",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "f9661b60.25bf98",
        "type": "ui_group",
        "name": "Start / Stop",
        "tab": "744ce3c9.d4c3fc",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "4b78ff21.a7a458",
        "type": "ui_group",
        "name": "Line Chart Examples",
        "tab": "37891d11.65a522",
        "order": 1,
        "disp": true,
        "width": "8"
    },
    {
        "id": "c01ba52a.67bb",
        "type": "ui_group",
        "name": "Bar Chart Examples",
        "tab": "37891d11.65a522",
        "order": 3,
        "disp": true,
        "width": "8"
    },
    {
        "id": "a99459cd.12661",
        "type": "ui_group",
        "name": "Pie Chart Examples",
        "tab": "37891d11.65a522",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "e3f2402014330625",
        "type": "ui_group",
        "name": "Chart1",
        "tab": "7386f74b93cf95c3",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "644f648ec14ade10",
        "type": "ui_group",
        "name": "Chart2",
        "tab": "7386f74b93cf95c3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d1e1d0fe.3493f8",
        "type": "ui_group",
        "name": "Table Example",
        "tab": "f64eb6be.3adcd8",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "c5cd21375e5e3ae5",
        "type": "ui_group",
        "name": "MAPITA",
        "tab": "9de26461a1743207",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "32d75f6d90219d5a",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "9de26461a1743207",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "86f0b834fc476be6",
        "type": "twitter-credentials",
        "screen_name": "juancrespin"
    },
    {
        "id": "9289dab4954a855f",
        "type": "kafka-broker",
        "name": "\"Hype\" is all you need",
        "hosts": "kafka:9092",
        "selfsign": false,
        "usetls": false,
        "cacert": "",
        "clientcert": "",
        "privatekey": "",
        "passphrase": ""
    },
    {
        "id": "8291272b55f44161",
        "type": "split",
        "z": "6094d8689e9234d3",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 370,
        "y": 140,
        "wires": [
            [
                "257de71549f00d0f"
            ]
        ]
    },
    {
        "id": "257de71549f00d0f",
        "type": "change",
        "z": "6094d8689e9234d3",
        "name": "to number",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(msg.payload)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 140,
        "wires": [
            [
                "a90158901118eab1"
            ]
        ]
    },
    {
        "id": "a90158901118eab1",
        "type": "switch",
        "z": "6094d8689e9234d3",
        "name": "route",
        "property": "parts.index",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 710,
        "y": 140,
        "wires": [
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "e54d3eae36dd2b2d",
        "type": "debug",
        "z": "481c6ef61434c534",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 100,
        "wires": []
    },
    {
        "id": "ebdaf957d204a582",
        "type": "debug",
        "z": "481c6ef61434c534",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 180,
        "wires": []
    },
    {
        "id": "b86ba5cf016d09d5",
        "type": "debug",
        "z": "481c6ef61434c534",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 260,
        "wires": []
    },
    {
        "id": "ca62ece8a9d2650e",
        "type": "debug",
        "z": "481c6ef61434c534",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 340,
        "wires": []
    },
    {
        "id": "a0e118fa9318c53a",
        "type": "inject",
        "z": "481c6ef61434c534",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "15.4,50,23.8,79",
        "payloadType": "msg",
        "x": 200,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c7fc11c3.07902",
        "type": "function",
        "z": "mqtt-topic-filter",
        "name": "filter",
        "func": "var a = msg.topic;\nvar b = env.get(\"filter\") || '#';\n\nif(a===b) { return [msg, null]; }\nif(b==='#') { \n    if(a) return [msg, null]; //if topic is something, OK\n    return [null, msg];//otherwise, fail!\n}\nvar nameSegments = a.split('/');\nvar filterSegments = b.split('/');\nfor (var i = 0; i < filterSegments.length; i++) {\n    var topicSegment = nameSegments[i];\n    var patternSegment = filterSegments[i];\n    var match = false;\n    if(topicSegment === patternSegment) { match = true; }\n    if(patternSegment === '+') { match = true; }\n    if(patternSegment === '#') {  return [msg, null]; }\n    if(match === false) { return [null, msg]; }\n}\nif(nameSegments.length !== filterSegments.length) { return [null, msg]; }\n\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 192,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c52c30b1.8341",
        "type": "inject",
        "z": "mqtt-topic-filter",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 148,
        "y": 160,
        "wires": [
            [
                "45ee843e.ec4bbc"
            ]
        ]
    },
    {
        "id": "519579c5.dfaec8",
        "type": "function",
        "z": "mqtt-topic-filter",
        "name": "",
        "func": "var b = env.get(\"filter\") || '#';\nnode.status({text:b})\nmsg.payload = b;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 428,
        "y": 144,
        "wires": [
            []
        ]
    },
    {
        "id": "45ee843e.ec4bbc",
        "type": "switch",
        "z": "mqtt-topic-filter",
        "name": "",
        "property": "status",
        "propertyType": "env",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "519579c5.dfaec8"
            ],
            [
                "4ce4687e.e359a8"
            ]
        ]
    },
    {
        "id": "4ce4687e.e359a8",
        "type": "function",
        "z": "mqtt-topic-filter",
        "name": "",
        "func": "node.status({})\ndelete msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 428,
        "y": 192,
        "wires": [
            []
        ]
    },
    {
        "id": "177b3fd6e565fe4f",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "68c62bfd43270c82",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 180,
        "y": 112,
        "wires": [
            [
                "fb234d64aab87818"
            ]
        ]
    },
    {
        "id": "fb234d64aab87818",
        "type": "change",
        "z": "33fb17bbf994d881",
        "g": "68c62bfd43270c82",
        "name": "Enable activity",
        "rules": [
            {
                "t": "set",
                "p": "active",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 112,
        "wires": [
            [
                "10543e828af4aaf8"
            ]
        ]
    },
    {
        "id": "10543e828af4aaf8",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "68c62bfd43270c82",
        "name": "Get current value",
        "func": "msg.payload = { status: global.get('active') };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 112,
        "wires": [
            [
                "d20011e0d4ae6543"
            ]
        ]
    },
    {
        "id": "d20011e0d4ae6543",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "68c62bfd43270c82",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 112,
        "wires": []
    },
    {
        "id": "b46b2f7a9cacfb0d",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "82b7e2114da2c90c",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 180,
        "y": 212,
        "wires": [
            [
                "1ac4764c14d95d86"
            ]
        ]
    },
    {
        "id": "1ac4764c14d95d86",
        "type": "change",
        "z": "33fb17bbf994d881",
        "g": "82b7e2114da2c90c",
        "name": "Disable activity",
        "rules": [
            {
                "t": "set",
                "p": "active",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 212,
        "wires": [
            [
                "fb0c21e7bca3fcd3"
            ]
        ]
    },
    {
        "id": "fb0c21e7bca3fcd3",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "82b7e2114da2c90c",
        "name": "Get current value",
        "func": "msg.payload = { status: global.get('active') };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 212,
        "wires": [
            [
                "af286c9fffab4d4a"
            ]
        ]
    },
    {
        "id": "af286c9fffab4d4a",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "82b7e2114da2c90c",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 212,
        "wires": []
    },
    {
        "id": "b812395ac4f4ce7d",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "cd55537075b2f83f",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payloadType": "date",
        "x": 182,
        "y": 680,
        "wires": [
            [
                "f8afc3939b6bf481"
            ]
        ]
    },
    {
        "id": "df8ff5651f86f89e",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "cd55537075b2f83f",
        "name": "Get current value",
        "func": "msg.payload = { youtubeStatus: global.get('youtubeActive') };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 592,
        "y": 680,
        "wires": [
            [
                "51ae80d2f6ca8eb3"
            ]
        ]
    },
    {
        "id": "51ae80d2f6ca8eb3",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "cd55537075b2f83f",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 792,
        "y": 680,
        "wires": []
    },
    {
        "id": "f8afc3939b6bf481",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "cd55537075b2f83f",
        "name": "Toggle YouTube flow",
        "func": "const key = 'youtubeActive';\nglobal.set(key, !global.get(key));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 368,
        "y": 680,
        "wires": [
            [
                "df8ff5651f86f89e"
            ]
        ]
    },
    {
        "id": "4bb19129745148f2",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "146013432e626e82",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payloadType": "date",
        "x": 182,
        "y": 780,
        "wires": [
            [
                "0c21dd766dd3106b"
            ]
        ]
    },
    {
        "id": "ec8565ebc928fcb9",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "146013432e626e82",
        "name": "Get current value",
        "func": "msg.payload = { redditStatus: global.get('redditActive') };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 572,
        "y": 780,
        "wires": [
            [
                "8848c62a563e38de"
            ]
        ]
    },
    {
        "id": "8848c62a563e38de",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "146013432e626e82",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 772,
        "y": 780,
        "wires": []
    },
    {
        "id": "0c21dd766dd3106b",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "146013432e626e82",
        "name": "Toggle Reddit flow",
        "func": "const key = 'redditActive';\nglobal.set(key, !global.get(key));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 358,
        "y": 780,
        "wires": [
            [
                "ec8565ebc928fcb9"
            ]
        ]
    },
    {
        "id": "fa83c1338bc90b39",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "791ed0bdc6f7a0f1",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payloadType": "date",
        "x": 182,
        "y": 880,
        "wires": [
            [
                "ce5c613b3b1c4bed"
            ]
        ]
    },
    {
        "id": "07dbd259743fbff4",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "791ed0bdc6f7a0f1",
        "name": "Get current value",
        "func": "msg.payload = { imdbStatus: global.get('imdbActive') };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 572,
        "y": 880,
        "wires": [
            [
                "a785604e891efaca"
            ]
        ]
    },
    {
        "id": "a785604e891efaca",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "791ed0bdc6f7a0f1",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 772,
        "y": 880,
        "wires": []
    },
    {
        "id": "ce5c613b3b1c4bed",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "791ed0bdc6f7a0f1",
        "name": "Toggle IMDB flow",
        "func": "const key = 'imdbActive';\nglobal.set(key, !global.get(key));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 358,
        "y": 880,
        "wires": [
            [
                "07dbd259743fbff4"
            ]
        ]
    },
    {
        "id": "c7db1f296bab31b7",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "d93fafc929717349",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payloadType": "date",
        "x": 182,
        "y": 980,
        "wires": [
            [
                "8403735ec8044349"
            ]
        ]
    },
    {
        "id": "14a494146e341edc",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "d93fafc929717349",
        "name": "Get current value",
        "func": "msg.payload = { googleTrendsStatus: global.get('googleTrendsActive') };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 632,
        "y": 980,
        "wires": [
            [
                "a3e9ae0f793939f8"
            ]
        ]
    },
    {
        "id": "a3e9ae0f793939f8",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "d93fafc929717349",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 832,
        "y": 980,
        "wires": []
    },
    {
        "id": "8403735ec8044349",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "d93fafc929717349",
        "name": "Toggle Google Trends flow",
        "func": "const key = 'googleTrendsActive';\nglobal.set(key, !global.get(key));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 388,
        "y": 980,
        "wires": [
            [
                "14a494146e341edc"
            ]
        ]
    },
    {
        "id": "7b9d9f7778e7c5a2",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "fae6370bc24314e3",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payloadType": "date",
        "x": 182,
        "y": 580,
        "wires": [
            [
                "e19ffe7bcbe6e56c"
            ]
        ]
    },
    {
        "id": "d4250208693a84f0",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "fae6370bc24314e3",
        "name": "Get current value",
        "func": "msg.payload = { twitterStatus: global.get('twitterActive') };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 572,
        "y": 580,
        "wires": [
            [
                "ffd926bc90de0224"
            ]
        ]
    },
    {
        "id": "ffd926bc90de0224",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "fae6370bc24314e3",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 772,
        "y": 580,
        "wires": []
    },
    {
        "id": "e19ffe7bcbe6e56c",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "fae6370bc24314e3",
        "name": "Toggle Twitter flow",
        "func": "const key = 'twitterActive';\nglobal.set(key, !global.get(key));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 358,
        "y": 580,
        "wires": [
            [
                "d4250208693a84f0"
            ]
        ]
    },
    {
        "id": "a2543d2f6c181db1",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "cfacdbbfb76c72cb",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1070,
        "y": 113,
        "wires": [
            [
                "e8110d0479702d80"
            ]
        ]
    },
    {
        "id": "e8110d0479702d80",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "cfacdbbfb76c72cb",
        "name": "Get context variables",
        "func": "msg.payload = global.get('utils').dumpVariables('context');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 113,
        "wires": [
            [
                "94e297c4e636cc49"
            ]
        ]
    },
    {
        "id": "94e297c4e636cc49",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "cfacdbbfb76c72cb",
        "name": "Display them!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 113,
        "wires": []
    },
    {
        "id": "21ae0b9f09891106",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "fbb04e1d387b251d",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1068,
        "y": 213,
        "wires": [
            [
                "a120d22e21ce0c4b"
            ]
        ]
    },
    {
        "id": "a120d22e21ce0c4b",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "fbb04e1d387b251d",
        "name": "Get flow variables",
        "func": "msg.payload = global.get('utils').dumpVariables('flow');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1238,
        "y": 213,
        "wires": [
            [
                "6fbf0edbf7cd1cb4"
            ]
        ]
    },
    {
        "id": "6fbf0edbf7cd1cb4",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "fbb04e1d387b251d",
        "name": "Display them!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1428,
        "y": 213,
        "wires": []
    },
    {
        "id": "afd564e59c73458f",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "b74c167dd34d1f38",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1071,
        "y": 313,
        "wires": [
            [
                "3c2503e4ed0a3a27"
            ]
        ]
    },
    {
        "id": "3c2503e4ed0a3a27",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "b74c167dd34d1f38",
        "name": "Get global variables",
        "func": "msg.payload = global.get('utils').dumpVariables('global');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1251,
        "y": 313,
        "wires": [
            [
                "11c3670eb88bf4c6"
            ]
        ]
    },
    {
        "id": "11c3670eb88bf4c6",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "b74c167dd34d1f38",
        "name": "Display them!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1471,
        "y": 313,
        "wires": []
    },
    {
        "id": "4769a5da73ed07a4",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "210bc54476210420",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 1078,
        "y": 413,
        "wires": [
            [
                "96ef737e0794df08"
            ]
        ]
    },
    {
        "id": "96ef737e0794df08",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "210bc54476210420",
        "name": "Create dumpVariables",
        "func": "const dumpVariables = (type) => {\n    let displayer = null;\n    const values = {};\n\n    switch (type) {\n        case 'context':\n            displayer = context;\n            break;\n        case 'flow':\n            displayer = flow;\n            break;\n        case 'global':\n            displayer = global;\n            break;\n    }\n\n    if (!displayer) {\n        return values;\n    }\n\n    const keys = displayer.keys();\n    keys.map(k => values[k] = displayer.get(k));\n\n    return values;\n};\n\nlet utils = global.get('utils');\nif (!utils) {\n    utils = {};\n}\n\nglobal.set('utils', { ...utils, dumpVariables });\nmsg.payload = { dumpVariables: 'created' };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1268,
        "y": 413,
        "wires": [
            [
                "42ca26c83a08406c"
            ]
        ]
    },
    {
        "id": "42ca26c83a08406c",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "210bc54476210420",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1468,
        "y": 413,
        "wires": []
    },
    {
        "id": "a1015830ca1a8fc8",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "22b0d3f6903e2ae1",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 183,
        "y": 315,
        "wires": [
            [
                "8f1b97b0ca3a415b"
            ]
        ]
    },
    {
        "id": "8f1b97b0ca3a415b",
        "type": "change",
        "z": "33fb17bbf994d881",
        "g": "22b0d3f6903e2ae1",
        "name": "Enable production",
        "rules": [
            {
                "t": "set",
                "p": "production",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 363,
        "y": 315,
        "wires": [
            [
                "996cbd9c17a39cc2"
            ]
        ]
    },
    {
        "id": "996cbd9c17a39cc2",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "22b0d3f6903e2ae1",
        "name": "Get current value",
        "func": "msg.payload = { production: global.get('production') };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 583,
        "y": 315,
        "wires": [
            [
                "4433f2421809b0cf"
            ]
        ]
    },
    {
        "id": "4433f2421809b0cf",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "22b0d3f6903e2ae1",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 783,
        "y": 315,
        "wires": []
    },
    {
        "id": "a74864bfbd14be58",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "3a1f342f5d9a2363",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 784,
        "y": 420,
        "wires": []
    },
    {
        "id": "127e0c5af75fab3c",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "3a1f342f5d9a2363",
        "name": "Get current value",
        "func": "msg.payload = { production: global.get('production') };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 584,
        "y": 420,
        "wires": [
            [
                "a74864bfbd14be58"
            ]
        ]
    },
    {
        "id": "8ef49ea1db0e1671",
        "type": "change",
        "z": "33fb17bbf994d881",
        "g": "3a1f342f5d9a2363",
        "name": "Enable production",
        "rules": [
            {
                "t": "set",
                "p": "production",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 364,
        "y": 420,
        "wires": [
            [
                "127e0c5af75fab3c"
            ]
        ]
    },
    {
        "id": "f830d5ec45f92c85",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "3a1f342f5d9a2363",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payloadType": "date",
        "x": 184,
        "y": 420,
        "wires": [
            [
                "8ef49ea1db0e1671"
            ]
        ]
    },
    {
        "id": "e53a26d4fc3d0b52",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "bbe7bfd43c865176",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payloadType": "date",
        "x": 1090,
        "y": 540,
        "wires": [
            [
                "51f34a833b432447"
            ]
        ]
    },
    {
        "id": "51f34a833b432447",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "bbe7bfd43c865176",
        "name": "Get all variables",
        "func": "const contexts = [\n    'context',\n    'flow',\n    'global',\n];\n\nconst dumpVariables = global.get('utils').dumpVariables;\n\nmsg.payload = Object.fromEntries(contexts.map(c => [\n    c,\n    dumpVariables(c)\n]));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 540,
        "wires": [
            [
                "8037c7ec10581a26"
            ]
        ]
    },
    {
        "id": "8037c7ec10581a26",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "bbe7bfd43c865176",
        "name": "Display them!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 540,
        "wires": []
    },
    {
        "id": "9e29b71bf0dd28b5",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "3784ea386c52ddbc",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 1120,
        "y": 780,
        "wires": [
            [
                "63a61d6b0b52cbc9"
            ]
        ]
    },
    {
        "id": "63a61d6b0b52cbc9",
        "type": "file in",
        "z": "33fb17bbf994d881",
        "g": "3784ea386c52ddbc",
        "name": "Read movies JSON",
        "filename": "./.node-red/movies.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1300,
        "y": 780,
        "wires": [
            [
                "8179ccaf18dc182d"
            ]
        ]
    },
    {
        "id": "8179ccaf18dc182d",
        "type": "json",
        "z": "33fb17bbf994d881",
        "g": "3784ea386c52ddbc",
        "name": "To JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1490,
        "y": 780,
        "wires": [
            [
                "97fe3683dfc76654",
                "201f2eec2d8a6d70"
            ]
        ]
    },
    {
        "id": "97fe3683dfc76654",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "3784ea386c52ddbc",
        "name": "Display them!",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 780,
        "wires": []
    },
    {
        "id": "201f2eec2d8a6d70",
        "type": "change",
        "z": "33fb17bbf994d881",
        "g": "3784ea386c52ddbc",
        "name": "Load movies",
        "rules": [
            {
                "t": "set",
                "p": "movies",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 840,
        "wires": [
            [
                "a792857bb3332a15"
            ]
        ]
    },
    {
        "id": "cd8c9fdb30f6952a",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "3784ea386c52ddbc",
        "name": "Display them!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1560,
        "y": 840,
        "wires": []
    },
    {
        "id": "a792857bb3332a15",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "3784ea386c52ddbc",
        "name": "Get current value",
        "func": "msg.payload = {\n    movies: global.get('movies'),\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 840,
        "wires": [
            [
                "cd8c9fdb30f6952a"
            ]
        ]
    },
    {
        "id": "322a05e3d72481a7",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "afc7153e8e396ddf",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 1128,
        "y": 1040,
        "wires": [
            [
                "dbf00bb6ef12cbbd"
            ]
        ]
    },
    {
        "id": "dbf00bb6ef12cbbd",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "afc7153e8e396ddf",
        "name": "Create addMovie",
        "func": "const addMovie = (movie) => {\n    const movies = global.get('movies');\n\n    movies.push(movie);\n    global.set(movies);\n};\n\nlet utils = global.get('utils');\nif (!utils) {\n    utils = {};\n}\n\nglobal.set('utils', { ...utils, addMovie });\nmsg.payload = { addMovie: 'created' };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1298,
        "y": 1040,
        "wires": [
            [
                "9c87a3d5f2f7f29f"
            ]
        ]
    },
    {
        "id": "9c87a3d5f2f7f29f",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "afc7153e8e396ddf",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1488,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6a421fa71f1bb9a5",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "e6da8ff70a6f5f75",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 1090,
        "y": 640,
        "wires": [
            [
                "ada12486597f99e3"
            ]
        ]
    },
    {
        "id": "dc1335795136f1fa",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "e6da8ff70a6f5f75",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 640,
        "wires": []
    },
    {
        "id": "ada12486597f99e3",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "e6da8ff70a6f5f75",
        "name": "Create utils",
        "func": "if (!global.get('utils')) {\n    global.set('utils', utils);\n}\n\nmsg.payload = { utils: 'created' };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 640,
        "wires": [
            [
                "dc1335795136f1fa"
            ]
        ]
    },
    {
        "id": "c5b1479845858ffa",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "f2b30cad92cf9df0",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 1128,
        "y": 1140,
        "wires": [
            [
                "5a0792746fbfc767"
            ]
        ]
    },
    {
        "id": "5a0792746fbfc767",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "f2b30cad92cf9df0",
        "name": "Create editMovie",
        "func": "const editMovie = (movie) => {\n    const movies = global.get('movies');\n\n    const editedMovies = movies.map(m => {\n        if (m.name != movie.name) {\n            return m;\n        }\n\n        return movie;\n    });\n    global.set(editedMovies);\n};\n\nlet utils = global.get('utils');\nif (!utils) {\n    utils = {};\n}\n\nglobal.set('utils', { ...utils, editMovie });\nmsg.payload = { editMovie: 'created' };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1298,
        "y": 1140,
        "wires": [
            [
                "f481525aa8bba3d5"
            ]
        ]
    },
    {
        "id": "f481525aa8bba3d5",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "f2b30cad92cf9df0",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1488,
        "y": 1140,
        "wires": []
    },
    {
        "id": "e9ea3015eaf7d185",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "4031fb8954fe4e03",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 1132,
        "y": 1240,
        "wires": [
            [
                "bb3e9e9231b78183"
            ]
        ]
    },
    {
        "id": "bb3e9e9231b78183",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "4031fb8954fe4e03",
        "name": "Create deleteMovie",
        "func": "const deleteMovie = (movie) => {\n    const movies = global.get('movies');\n\n    const filteredMovies = movies.map(m => m.name != movie.name);\n    global.set(filteredMovies);\n};\n\nlet utils = global.get('utils');\nif (!utils) {\n    utils = {};\n}\n\nglobal.set('utils', { ...utils, deleteMovie });\nmsg.payload = { deleteMovie: 'created' };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1302,
        "y": 1240,
        "wires": [
            [
                "e547516ca02b712d"
            ]
        ]
    },
    {
        "id": "e547516ca02b712d",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "4031fb8954fe4e03",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1492,
        "y": 1240,
        "wires": []
    },
    {
        "id": "417b5678e5dd71c5",
        "type": "inject",
        "z": "33fb17bbf994d881",
        "g": "b6fe3eac17025871",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1124,
        "y": 940,
        "wires": [
            [
                "21ae4c72edd75006"
            ]
        ]
    },
    {
        "id": "21ae4c72edd75006",
        "type": "function",
        "z": "33fb17bbf994d881",
        "g": "b6fe3eac17025871",
        "name": "Get current movies",
        "func": "msg.payload = global.get('movies');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1294,
        "y": 940,
        "wires": [
            [
                "e7ca973c2aefb6bd"
            ]
        ]
    },
    {
        "id": "e7ca973c2aefb6bd",
        "type": "file",
        "z": "33fb17bbf994d881",
        "g": "b6fe3eac17025871",
        "name": "Save them",
        "filename": "./.node-red/movies.saved.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1494,
        "y": 940,
        "wires": [
            [
                "b838ce902af75d6e"
            ]
        ]
    },
    {
        "id": "b838ce902af75d6e",
        "type": "debug",
        "z": "33fb17bbf994d881",
        "g": "b6fe3eac17025871",
        "name": "Display the result",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1694,
        "y": 940,
        "wires": []
    },
    {
        "id": "df88add75a402e30",
        "type": "inject",
        "z": "58d31a6645cf0990",
        "g": "ac2f4444927f5422",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "223e07e42ab4cc17"
            ]
        ]
    },
    {
        "id": "223e07e42ab4cc17",
        "type": "change",
        "z": "58d31a6645cf0990",
        "g": "ac2f4444927f5422",
        "name": "Continue flow",
        "rules": [
            {
                "t": "set",
                "p": "twitterActive",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "ad226aa0c8785e01"
            ]
        ]
    },
    {
        "id": "817e71bb78abc26b",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "g": "ac2f4444927f5422",
        "name": "Log",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "ad226aa0c8785e01",
        "type": "function",
        "z": "58d31a6645cf0990",
        "g": "ac2f4444927f5422",
        "name": "Create message",
        "func": "msg.payload = 'Twitter flow started/resumed';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "817e71bb78abc26b"
            ]
        ]
    },
    {
        "id": "72861dd35d802671",
        "type": "inject",
        "z": "58d31a6645cf0990",
        "g": "fdaebe4c5381fa72",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 860,
        "y": 80,
        "wires": [
            [
                "ce19dc01f742a7ae"
            ]
        ]
    },
    {
        "id": "ce19dc01f742a7ae",
        "type": "change",
        "z": "58d31a6645cf0990",
        "g": "fdaebe4c5381fa72",
        "name": "Stop flow",
        "rules": [
            {
                "t": "set",
                "p": "twitterActive",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 80,
        "wires": [
            [
                "636843ece6839af9"
            ]
        ]
    },
    {
        "id": "6f1ccd9fbc553af2",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "g": "fdaebe4c5381fa72",
        "name": "Log",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 80,
        "wires": []
    },
    {
        "id": "636843ece6839af9",
        "type": "function",
        "z": "58d31a6645cf0990",
        "g": "fdaebe4c5381fa72",
        "name": "Create message",
        "func": "msg.payload = 'Twitter flow stopped/paused';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 80,
        "wires": [
            [
                "6f1ccd9fbc553af2"
            ]
        ]
    },
    {
        "id": "5df2a142fc5a534b",
        "type": "inject",
        "z": "58d31a6645cf0990",
        "g": "cac3bb2d7a66d622",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "7b6144d531c9c56a"
            ]
        ]
    },
    {
        "id": "7b6144d531c9c56a",
        "type": "function",
        "z": "58d31a6645cf0990",
        "g": "cac3bb2d7a66d622",
        "name": "Get flow status",
        "func": "const status = global.get('twitterActive') ? 'on' : 'off';\nmsg.payload = `The current Twitter flow status is: ${status}`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            [
                "e10a963b5251853d"
            ]
        ]
    },
    {
        "id": "e10a963b5251853d",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "g": "cac3bb2d7a66d622",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 180,
        "wires": []
    },
    {
        "id": "ba36db51ab65eb12",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 360,
        "wires": []
    },
    {
        "id": "c980aceca59c1a48",
        "type": "function",
        "z": "58d31a6645cf0990",
        "name": "Store timestamp",
        "func": "msg.timestamp = msg.payload\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 400,
        "wires": [
            [
                "ba36db51ab65eb12",
                "946d94f3cb662583"
            ]
        ]
    },
    {
        "id": "d61fef385574b1ea",
        "type": "inject",
        "z": "58d31a6645cf0990",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "c980aceca59c1a48"
            ]
        ]
    },
    {
        "id": "f94adbdc41a026cc",
        "type": "switch",
        "z": "58d31a6645cf0990",
        "name": "Is Twitter status active",
        "property": "twitterActive",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 740,
        "y": 440,
        "wires": [
            [
                "780aae3f74cdb195"
            ],
            [
                "1c91674223cdd30e"
            ]
        ]
    },
    {
        "id": "946d94f3cb662583",
        "type": "switch",
        "z": "58d31a6645cf0990",
        "name": "Is global status active",
        "property": "active",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "5b4b3331134b6d26"
            ],
            [
                "f94adbdc41a026cc"
            ]
        ]
    },
    {
        "id": "b3dbac3bf05a46ba",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 360,
        "wires": []
    },
    {
        "id": "5b4b3331134b6d26",
        "type": "template",
        "z": "58d31a6645cf0990",
        "name": "Create warning",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The global status is off. Set it to on!",
        "output": "str",
        "x": 720,
        "y": 360,
        "wires": [
            [
                "b3dbac3bf05a46ba"
            ]
        ]
    },
    {
        "id": "780aae3f74cdb195",
        "type": "template",
        "z": "58d31a6645cf0990",
        "name": "Create warning",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The twitter status is disabled. Enable it!",
        "output": "str",
        "x": 950,
        "y": 420,
        "wires": [
            [
                "6ad49d705728e726"
            ]
        ]
    },
    {
        "id": "6ad49d705728e726",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 420,
        "wires": []
    },
    {
        "id": "bfd28323118fa62c",
        "type": "switch",
        "z": "58d31a6645cf0990",
        "name": "Is movie extracted",
        "property": "current",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "gte",
                "v": "limit",
                "vt": "msg"
            },
            {
                "t": "lt",
                "v": "limit",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 230,
        "y": 560,
        "wires": [
            [
                "fd494798516e349f"
            ],
            [
                "933fa6bcd6411306"
            ],
            [
                "767f5f576625d7c6"
            ]
        ]
    },
    {
        "id": "9a826842f7bb1c86",
        "type": "template",
        "z": "58d31a6645cf0990",
        "name": "Create warning",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "No tweets have been collected yet!",
        "output": "str",
        "x": 680,
        "y": 520,
        "wires": [
            [
                "304126c6cacad94a"
            ]
        ]
    },
    {
        "id": "304126c6cacad94a",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 520,
        "wires": []
    },
    {
        "id": "36747e77387fb570",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "name": "Display result",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 700,
        "wires": []
    },
    {
        "id": "e55ebc95bd08a8bd",
        "type": "function",
        "z": "58d31a6645cf0990",
        "name": "Add timestamp",
        "func": "msg.payload = msg.payload.map(tweet => ({\n    ...tweet,\n    extractionDate: msg.timestamp,\n}));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 720,
        "wires": [
            [
                "36747e77387fb570",
                "6b8a1008f2f90ee3"
            ]
        ]
    },
    {
        "id": "1a4fddef0fd4e827",
        "type": "function",
        "z": "58d31a6645cf0990",
        "name": "REPLACE ME!!!",
        "func": "msg.payload = [\n    {'content': 'test'},\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 720,
        "wires": [
            [
                "e55ebc95bd08a8bd"
            ]
        ]
    },
    {
        "id": "13cf0ac493dbefc3",
        "type": "comment",
        "z": "58d31a6645cf0990",
        "name": "Twitter flow explanation",
        "info": "1. Starts\n1. Adds the timestamp\n1. Checks if the global status is active\n1. Checks if the twitter status is active\n1. Checks that no tweets have been extracted about this movie\n1. Extracts the tweets\n1. Adds the `extractionDate` param\n1. Sends them to Kafka",
        "x": 220,
        "y": 340,
        "wires": []
    },
    {
        "id": "e04384bfdc6c577a",
        "type": "function",
        "z": "58d31a6645cf0990",
        "name": "Create Movie tweets key",
        "func": "let extraction = global.get('extraction');\nif (!extraction) {\n    extraction = {};\n}\n\nif (!extraction?.twitter) {\n    extraction.twitter = {};\n}\n\nif (!extraction.twitter?.tweets) {\n    extraction.twitter.tweets = [];\n}\n\nif (!extraction.twitter?.limit) {\n    extraction.twitter.limit = 50_000;\n}\n\nglobal.set('extraction', extraction);\nmsg.payload = extraction;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 560,
        "wires": [
            [
                "dbe2d4350b7f6672",
                "ab4ffac1c22a87b9"
            ]
        ]
    },
    {
        "id": "cf1d60269254e1eb",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 580,
        "wires": []
    },
    {
        "id": "fd494798516e349f",
        "type": "link out",
        "z": "58d31a6645cf0990",
        "name": "No movie extraction details",
        "mode": "link",
        "links": [
            "d3e7cf65f91a54d1"
        ],
        "x": 375,
        "y": 520,
        "wires": []
    },
    {
        "id": "d3e7cf65f91a54d1",
        "type": "link in",
        "z": "58d31a6645cf0990",
        "name": "No movie extraction details",
        "links": [
            "fd494798516e349f"
        ],
        "x": 535,
        "y": 560,
        "wires": [
            [
                "e04384bfdc6c577a",
                "9a826842f7bb1c86"
            ]
        ]
    },
    {
        "id": "933fa6bcd6411306",
        "type": "link out",
        "z": "58d31a6645cf0990",
        "name": "Movie WAS extracted",
        "mode": "link",
        "links": [
            "ef6bd6197b131654"
        ],
        "x": 375,
        "y": 560,
        "wires": []
    },
    {
        "id": "dbe2d4350b7f6672",
        "type": "link out",
        "z": "58d31a6645cf0990",
        "name": "Movie extraction details now exists",
        "mode": "link",
        "links": [
            "3f586223dbe75a54"
        ],
        "x": 975,
        "y": 540,
        "wires": []
    },
    {
        "id": "3f586223dbe75a54",
        "type": "link in",
        "z": "58d31a6645cf0990",
        "name": "Evaluate movie's extraction",
        "links": [
            "dbe2d4350b7f6672",
            "1c91674223cdd30e"
        ],
        "x": 95,
        "y": 480,
        "wires": [
            [
                "ef4065ed44a9bfca"
            ]
        ]
    },
    {
        "id": "9978b0b44cb9f99d",
        "type": "template",
        "z": "58d31a6645cf0990",
        "name": "Create warning",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Movie was already extracted!",
        "output": "str",
        "x": 690,
        "y": 640,
        "wires": [
            [
                "5539d87bbada7397"
            ]
        ]
    },
    {
        "id": "5539d87bbada7397",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 640,
        "wires": []
    },
    {
        "id": "ef6bd6197b131654",
        "type": "link in",
        "z": "58d31a6645cf0990",
        "name": "Movie WAS extracted",
        "links": [
            "933fa6bcd6411306"
        ],
        "x": 535,
        "y": 680,
        "wires": [
            [
                "9978b0b44cb9f99d"
            ]
        ]
    },
    {
        "id": "1c91674223cdd30e",
        "type": "link out",
        "z": "58d31a6645cf0990",
        "name": "Evaluate movie's extraction",
        "mode": "link",
        "links": [
            "3f586223dbe75a54"
        ],
        "x": 895,
        "y": 460,
        "wires": []
    },
    {
        "id": "767f5f576625d7c6",
        "type": "link out",
        "z": "58d31a6645cf0990",
        "name": "Extract tweets",
        "mode": "link",
        "links": [
            "96df971e04087913"
        ],
        "x": 375,
        "y": 600,
        "wires": []
    },
    {
        "id": "96df971e04087913",
        "type": "link in",
        "z": "58d31a6645cf0990",
        "name": "Extract tweets",
        "links": [
            "767f5f576625d7c6"
        ],
        "x": 95,
        "y": 620,
        "wires": [
            [
                "1a4fddef0fd4e827"
            ]
        ]
    },
    {
        "id": "c7afbf427c94c38d",
        "type": "inject",
        "z": "58d31a6645cf0990",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1100,
        "y": 360,
        "wires": [
            [
                "780aae3f74cdb195"
            ]
        ]
    },
    {
        "id": "5f5a2729a935ccb2",
        "type": "inject",
        "z": "58d31a6645cf0990",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 680,
        "y": 300,
        "wires": [
            [
                "5b4b3331134b6d26"
            ]
        ]
    },
    {
        "id": "bc031edaf2b42d67",
        "type": "inject",
        "z": "58d31a6645cf0990",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 510,
        "y": 520,
        "wires": [
            [
                "9a826842f7bb1c86"
            ]
        ]
    },
    {
        "id": "dcd7600e419e493e",
        "type": "inject",
        "z": "58d31a6645cf0990",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 520,
        "y": 640,
        "wires": [
            [
                "9978b0b44cb9f99d"
            ]
        ]
    },
    {
        "id": "6dae26d91944340e",
        "type": "function",
        "z": "58d31a6645cf0990",
        "name": "Update movie's extraction",
        "func": "const extraction = global.get('extraction')\nconst tweetsLenBefore = extraction.twitter.tweets.length;\nmsg.payload.forEach(tweet => extraction.twitter.tweets.push(tweet));\nconst tweetsLenAfter = extraction.twitter.tweets.length;\n\nglobal.set('extraction', extraction);\n\nmsg.payload = tweetsLenAfter - tweetsLenBefore;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 820,
        "wires": [
            [
                "70d1c43f5dc18bba"
            ]
        ]
    },
    {
        "id": "70d1c43f5dc18bba",
        "type": "template",
        "z": "58d31a6645cf0990",
        "name": "Create log",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "A total of {{payload}} new tweets have been added!",
        "output": "str",
        "x": 530,
        "y": 820,
        "wires": [
            [
                "36c055d946980c35"
            ]
        ]
    },
    {
        "id": "36c055d946980c35",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 820,
        "wires": []
    },
    {
        "id": "2050f3d5256524ae",
        "type": "inject",
        "z": "58d31a6645cf0990",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "42",
        "payloadType": "num",
        "x": 370,
        "y": 780,
        "wires": [
            [
                "70d1c43f5dc18bba"
            ]
        ]
    },
    {
        "id": "6b8a1008f2f90ee3",
        "type": "link out",
        "z": "58d31a6645cf0990",
        "name": "Timestamp added",
        "mode": "link",
        "links": [
            "680f8578d095a2a1"
        ],
        "x": 1075,
        "y": 740,
        "wires": []
    },
    {
        "id": "680f8578d095a2a1",
        "type": "link in",
        "z": "58d31a6645cf0990",
        "name": "Timestamp added",
        "links": [
            "6b8a1008f2f90ee3"
        ],
        "x": 95,
        "y": 860,
        "wires": [
            [
                "6dae26d91944340e",
                "27d2b9125501ea74"
            ]
        ]
    },
    {
        "id": "ca382188db6e0f58",
        "type": "kafka-producer",
        "z": "58d31a6645cf0990",
        "name": "Send to Kafka",
        "broker": "9289dab4954a855f",
        "topic": "tweets",
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "attributes": "0",
        "x": 420,
        "y": 900,
        "wires": []
    },
    {
        "id": "27d2b9125501ea74",
        "type": "function",
        "z": "58d31a6645cf0990",
        "name": "To String",
        "func": "msg.payload = JSON.stringify(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 900,
        "wires": [
            [
                "ca382188db6e0f58"
            ]
        ]
    },
    {
        "id": "ef4065ed44a9bfca",
        "type": "function",
        "z": "58d31a6645cf0990",
        "name": "Get limitations",
        "func": "const extraction = global.get('extraction');\n\nconst limit = extraction?.twitter?.limit\nmsg.limit = limit ? limit : 0;\n\nconst current = extraction?.twitter?.tweets?.length\nmsg.current = current ? current : false;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 460,
        "wires": [
            [
                "c539183c87f1f40e",
                "bfd28323118fa62c"
            ]
        ]
    },
    {
        "id": "c539183c87f1f40e",
        "type": "debug",
        "z": "58d31a6645cf0990",
        "name": "Display them!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 460,
        "wires": []
    },
    {
        "id": "ab4ffac1c22a87b9",
        "type": "function",
        "z": "58d31a6645cf0990",
        "name": "Get current value",
        "func": "msg.payload = global.get('extraction');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 580,
        "wires": [
            [
                "cf1d60269254e1eb"
            ]
        ]
    },
    {
        "id": "4713841ca8d64fbf",
        "type": "inject",
        "z": "96dea6cd75e87f04",
        "g": "3decdc76360abade",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "674add1142f7351e"
            ]
        ]
    },
    {
        "id": "674add1142f7351e",
        "type": "change",
        "z": "96dea6cd75e87f04",
        "g": "3decdc76360abade",
        "name": "Continue flow",
        "rules": [
            {
                "t": "set",
                "p": "youtubeActive",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "92293ec45dd48ed1"
            ]
        ]
    },
    {
        "id": "a505d1593c9d0984",
        "type": "debug",
        "z": "96dea6cd75e87f04",
        "g": "3decdc76360abade",
        "name": "Log",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "92293ec45dd48ed1",
        "type": "function",
        "z": "96dea6cd75e87f04",
        "g": "3decdc76360abade",
        "name": "Create message",
        "func": "msg.payload = 'YouTube flow started/resumed';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "a505d1593c9d0984"
            ]
        ]
    },
    {
        "id": "8c21f56ec687f85d",
        "type": "inject",
        "z": "96dea6cd75e87f04",
        "g": "09d0a1f7b908fa55",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 860,
        "y": 80,
        "wires": [
            [
                "506b0491269255a0"
            ]
        ]
    },
    {
        "id": "506b0491269255a0",
        "type": "change",
        "z": "96dea6cd75e87f04",
        "g": "09d0a1f7b908fa55",
        "name": "Stop flow",
        "rules": [
            {
                "t": "set",
                "p": "youtubeActive",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 80,
        "wires": [
            [
                "99b6a8b9b68b9940"
            ]
        ]
    },
    {
        "id": "551b75efa3ebd3b3",
        "type": "debug",
        "z": "96dea6cd75e87f04",
        "g": "09d0a1f7b908fa55",
        "name": "Log",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 80,
        "wires": []
    },
    {
        "id": "99b6a8b9b68b9940",
        "type": "function",
        "z": "96dea6cd75e87f04",
        "g": "09d0a1f7b908fa55",
        "name": "Create message",
        "func": "msg.payload = 'YouTube flow stopped/paused';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 80,
        "wires": [
            [
                "551b75efa3ebd3b3"
            ]
        ]
    },
    {
        "id": "272baba813a69f54",
        "type": "inject",
        "z": "96dea6cd75e87f04",
        "g": "a11aaf49ce84b49b",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "df4b66d57393f062"
            ]
        ]
    },
    {
        "id": "df4b66d57393f062",
        "type": "function",
        "z": "96dea6cd75e87f04",
        "g": "a11aaf49ce84b49b",
        "name": "Get flow status",
        "func": "const status = global.get('youtubeActive') ? 'on' : 'off';\nmsg.payload = `The current YouTube flow status is: ${status}`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            [
                "7f8de2ca53d2b668"
            ]
        ]
    },
    {
        "id": "7f8de2ca53d2b668",
        "type": "debug",
        "z": "96dea6cd75e87f04",
        "g": "a11aaf49ce84b49b",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 180,
        "wires": []
    },
    {
        "id": "93b735641bed9b26",
        "type": "inject",
        "z": "ea2cb14739a34ceb",
        "g": "5c4cd79a01546caf",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "66a2d85fba4c67f9"
            ]
        ]
    },
    {
        "id": "66a2d85fba4c67f9",
        "type": "function",
        "z": "ea2cb14739a34ceb",
        "g": "5c4cd79a01546caf",
        "name": "Get flow status",
        "func": "const status = global.get('redditActive') ? 'on' : 'off';\nmsg.payload = `The current Reddit flow status is: ${status}`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            [
                "ebb0b8b5bf5c2a05"
            ]
        ]
    },
    {
        "id": "ebb0b8b5bf5c2a05",
        "type": "debug",
        "z": "ea2cb14739a34ceb",
        "g": "5c4cd79a01546caf",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 180,
        "wires": []
    },
    {
        "id": "250a835ccacffc06",
        "type": "inject",
        "z": "ea2cb14739a34ceb",
        "g": "55e4753d67b86fe2",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 860,
        "y": 80,
        "wires": [
            [
                "7b8b0a0f1b638ba5"
            ]
        ]
    },
    {
        "id": "7b8b0a0f1b638ba5",
        "type": "change",
        "z": "ea2cb14739a34ceb",
        "g": "55e4753d67b86fe2",
        "name": "Stop flow",
        "rules": [
            {
                "t": "set",
                "p": "redditActive",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 80,
        "wires": [
            [
                "bed9bcbc38ec89b1"
            ]
        ]
    },
    {
        "id": "aa8d5d8b5483903e",
        "type": "debug",
        "z": "ea2cb14739a34ceb",
        "g": "55e4753d67b86fe2",
        "name": "Log",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 80,
        "wires": []
    },
    {
        "id": "bed9bcbc38ec89b1",
        "type": "function",
        "z": "ea2cb14739a34ceb",
        "g": "55e4753d67b86fe2",
        "name": "Create message",
        "func": "msg.payload = 'Reddit flow stopped/paused';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 80,
        "wires": [
            [
                "aa8d5d8b5483903e"
            ]
        ]
    },
    {
        "id": "b51b62a7319e485e",
        "type": "inject",
        "z": "ea2cb14739a34ceb",
        "g": "3fd8946dee861a41",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "7f8e2533800156bb"
            ]
        ]
    },
    {
        "id": "7f8e2533800156bb",
        "type": "change",
        "z": "ea2cb14739a34ceb",
        "g": "3fd8946dee861a41",
        "name": "Continue flow",
        "rules": [
            {
                "t": "set",
                "p": "redditActive",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "9f325b821c5e188a"
            ]
        ]
    },
    {
        "id": "c7f1ad1ebdb19dac",
        "type": "debug",
        "z": "ea2cb14739a34ceb",
        "g": "3fd8946dee861a41",
        "name": "Log",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "9f325b821c5e188a",
        "type": "function",
        "z": "ea2cb14739a34ceb",
        "g": "3fd8946dee861a41",
        "name": "Create message",
        "func": "msg.payload = 'Reddit flow started/resumed';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "c7f1ad1ebdb19dac"
            ]
        ]
    },
    {
        "id": "f8049b37419f5c46",
        "type": "inject",
        "z": "4bbfa8c0eabd9b15",
        "g": "0a210a01c848dcac",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "54f068c0b5a8a931"
            ]
        ]
    },
    {
        "id": "54f068c0b5a8a931",
        "type": "change",
        "z": "4bbfa8c0eabd9b15",
        "g": "0a210a01c848dcac",
        "name": "Continue flow",
        "rules": [
            {
                "t": "set",
                "p": "imdbActive",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "08b666656aa58ae9"
            ]
        ]
    },
    {
        "id": "cb6121e9591fd6d3",
        "type": "debug",
        "z": "4bbfa8c0eabd9b15",
        "g": "0a210a01c848dcac",
        "name": "Log",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "08b666656aa58ae9",
        "type": "function",
        "z": "4bbfa8c0eabd9b15",
        "g": "0a210a01c848dcac",
        "name": "Create message",
        "func": "msg.payload = 'IMDB flow started/resumed';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "cb6121e9591fd6d3"
            ]
        ]
    },
    {
        "id": "86a5a4925d7e7bba",
        "type": "inject",
        "z": "4bbfa8c0eabd9b15",
        "g": "e16765be6b5f25ee",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 860,
        "y": 80,
        "wires": [
            [
                "dcde1d055b2603d0"
            ]
        ]
    },
    {
        "id": "dcde1d055b2603d0",
        "type": "change",
        "z": "4bbfa8c0eabd9b15",
        "g": "e16765be6b5f25ee",
        "name": "Stop flow",
        "rules": [
            {
                "t": "set",
                "p": "imdbActive",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 80,
        "wires": [
            [
                "1794f5c5a3de3e9b"
            ]
        ]
    },
    {
        "id": "f020a7cc3fbf7791",
        "type": "debug",
        "z": "4bbfa8c0eabd9b15",
        "g": "e16765be6b5f25ee",
        "name": "Log",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 80,
        "wires": []
    },
    {
        "id": "1794f5c5a3de3e9b",
        "type": "function",
        "z": "4bbfa8c0eabd9b15",
        "g": "e16765be6b5f25ee",
        "name": "Create message",
        "func": "msg.payload = 'IMDB flow stopped/paused';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 80,
        "wires": [
            [
                "f020a7cc3fbf7791"
            ]
        ]
    },
    {
        "id": "5363800c2bea0ce1",
        "type": "inject",
        "z": "4bbfa8c0eabd9b15",
        "g": "a283e2958852e8dc",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "eac6b8f5bf605af7"
            ]
        ]
    },
    {
        "id": "eac6b8f5bf605af7",
        "type": "function",
        "z": "4bbfa8c0eabd9b15",
        "g": "a283e2958852e8dc",
        "name": "Get flow status",
        "func": "const status = global.get('imdbActive') ? 'on' : 'off';\nmsg.payload = `The current IMDB flow status is: ${status}`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            [
                "8d93992f751f3cf8"
            ]
        ]
    },
    {
        "id": "8d93992f751f3cf8",
        "type": "debug",
        "z": "4bbfa8c0eabd9b15",
        "g": "a283e2958852e8dc",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 180,
        "wires": []
    },
    {
        "id": "81c1e82146f95dcc",
        "type": "inject",
        "z": "b91c4e80c1c500c6",
        "g": "7237a8c2747f7af5",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "1efc6786a730f260"
            ]
        ]
    },
    {
        "id": "1efc6786a730f260",
        "type": "change",
        "z": "b91c4e80c1c500c6",
        "g": "7237a8c2747f7af5",
        "name": "Continue flow",
        "rules": [
            {
                "t": "set",
                "p": "googleTrendsActive",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "66a33a13a769188a"
            ]
        ]
    },
    {
        "id": "6d7f483ed33fb9a5",
        "type": "debug",
        "z": "b91c4e80c1c500c6",
        "g": "7237a8c2747f7af5",
        "name": "Log",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "66a33a13a769188a",
        "type": "function",
        "z": "b91c4e80c1c500c6",
        "g": "7237a8c2747f7af5",
        "name": "Create message",
        "func": "msg.payload = 'Google Trends flow started/resumed';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "6d7f483ed33fb9a5"
            ]
        ]
    },
    {
        "id": "06ee0c7463410ec8",
        "type": "inject",
        "z": "b91c4e80c1c500c6",
        "g": "29b5bef846af963b",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 860,
        "y": 80,
        "wires": [
            [
                "0bd4f4d81f29b7c6"
            ]
        ]
    },
    {
        "id": "0bd4f4d81f29b7c6",
        "type": "change",
        "z": "b91c4e80c1c500c6",
        "g": "29b5bef846af963b",
        "name": "Stop flow",
        "rules": [
            {
                "t": "set",
                "p": "googleTrendsActive",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 80,
        "wires": [
            [
                "9f7a5a766c56e746"
            ]
        ]
    },
    {
        "id": "51e316551668b964",
        "type": "debug",
        "z": "b91c4e80c1c500c6",
        "g": "29b5bef846af963b",
        "name": "Log",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 80,
        "wires": []
    },
    {
        "id": "9f7a5a766c56e746",
        "type": "function",
        "z": "b91c4e80c1c500c6",
        "g": "29b5bef846af963b",
        "name": "Create message",
        "func": "msg.payload = 'Google Trends flow stopped/paused';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 80,
        "wires": [
            [
                "51e316551668b964"
            ]
        ]
    },
    {
        "id": "a92e94c5b5d027e9",
        "type": "inject",
        "z": "b91c4e80c1c500c6",
        "g": "46807eb49ce40c73",
        "name": "Do",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "9c804ac7a2d38fd8"
            ]
        ]
    },
    {
        "id": "9c804ac7a2d38fd8",
        "type": "function",
        "z": "b91c4e80c1c500c6",
        "g": "46807eb49ce40c73",
        "name": "Get flow status",
        "func": "const status = global.get('googleTrendsActive') ? 'on' : 'off';\nmsg.payload = `The current Google Trends flow status is: ${status}`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            [
                "e543abed3b8989cc"
            ]
        ]
    },
    {
        "id": "e543abed3b8989cc",
        "type": "debug",
        "z": "b91c4e80c1c500c6",
        "g": "46807eb49ce40c73",
        "name": "Display it!",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 180,
        "wires": []
    }
]